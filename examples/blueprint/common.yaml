tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.1/types.yaml

node_types:
  server_type:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      use_external_resource:
        default: false
      resource_id:
        default: ''
    interfaces:
      maintenance:
        suspend:
          implementation: scripts/suspend.py
          executor: central_deployment_agent
        resume:
          implementation: scripts/resume.py
          executor: central_deployment_agent

###############################################################################
# Node templates section
###############################################################################
node_templates:

  docker:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/docker-uninstall.sh
        start:
          implementation: scripts/docker-install.sh
        delete:
          implementation: scripts/docker-uninstall.sh
    relationships:
    - target: kubeinstance
      type: cloudify.relationships.contained_in

  kubenetes:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/kubernetes-uninstall.sh
        start:
          implementation: scripts/kubernetes-install.sh
        delete:
          implementation: scripts/kubernetes-uninstall.sh
    relationships:
    - target: docker
      type: cloudify.relationships.contained_in

  kubemanager_docker:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/docker-uninstall.sh
        start:
          implementation: scripts/docker-install.sh
        delete:
          implementation: scripts/docker-uninstall.sh
    relationships:
    - target: kubemanager
      type: cloudify.relationships.contained_in

  kubemanager_kubenetes:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/kubernetes-uninstall.sh
        start:
          implementation: scripts/kubernetes-install.sh
        delete:
          implementation: scripts/kubernetes-uninstall.sh
    relationships:
    - target: kubemanager_docker
      type: cloudify.relationships.contained_in

  kubemanager_server:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/kubernetes-master-config.sh
        start:
          implementation: scripts/export_config.py
    relationships:
    - target: kubemanager_kubenetes
      type: cloudify.relationships.contained_in

  kubenetes_slave:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/kubernetes-join.sh
          inputs:
            TOKEN: { get_attribute: [kubemanager_server, token] }
            IP: { get_attribute: [kubemanager, ip] }
    relationships:
    - target: kubenetes
      type: cloudify.relationships.contained_in
    - target: kubemanager_server
      type: cloudify.relationships.depends_on

  server:
    type: server_type
    properties:
      resource_id: KubenetesSubActions
